var carte={};!function(){var t=function(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s,this.ulx=t,this.uly=e,this.lrx=t+i,this.lry=e+i};t.prototype.containsPoint=function(t,e){return this.ulx<=t&&t<=this.lrx&&this.uly<=e&&e<=this.lry},t.prototype.containsRect=function(t){return this.containsPoint(t.x,t.y)&&this.containsPoint(t.x+t.width,t.y+t.height)},t.prototype.containsDimensions=function(t,e){return this.width>=t&&this.height>=e},t.prototype.getNormalizedRect=function(e,i){var s=this.x/e,n=this.y/i,r=this.width/e,o=this.height/i;return new t(s,n,r,o)},window.Rectangle=t}(),function(){var t=function(t){this.rect=t,this.name="sprite0",this.image=null,this.child=[]};t.prototype.computeNormal=function(t,e){return this.maxWidth=t,this.maxHeight=e,this.normalRect=this.rect.getNormalizedRect(t,e),this},t.prototype.insert=function(e,i){var s=null;if(null!==this.image)return this.child.length>0?(s=this.child[0].insert(e,i),null!==s?s:this.child[1].insert(e,i)):null;if(this.rect.containsDimensions(i.width,i.height)){if(this.rect.width==i.width&&this.rect.height==i.height)return this.name=e,this.image=i,this;if(this.child.length>0)return s=this.child[0].insert(e,i),null!==s?s:this.child[1].insert(e,i);var n=this.rect,r=this.rect.width-i.width,o=this.rect.height-i.height;return r>o?(this.child[0]=new t(new Rectangle(n.x,n.y,i.width,n.height)),this.child[1]=new t(new Rectangle(n.x+i.width,n.y,r,n.height))):(this.child[0]=new t(new Rectangle(n.x,n.y,n.width,i.height)),this.child[1]=new t(new Rectangle(n.x,n.y+i.height,n.width,o))),this.child[0].computeNormal(this.maxWidth,this.maxHeight),this.child[1].computeNormal(this.maxWidth,this.maxHeight),this.child[0].insert(e,i)}return null},t.prototype.get=function(t){if(this.name==t)return this;if(this.child.length>0){var e=this.child[0].get(t);return null!==e?e:this.child[1].get(t)}return null},t.prototype["delete"]=function(t){var e=this.get(t);return e&&e.clear(),e},t.prototype.clear=function(){this.name="",this.image=null};var e=function(e,i){this.canvas=document.createElement("canvas"),this.canvas.width=e,this.canvas.height=i,this.context=this.canvas.getContext("2d"),this.texture=new THREE.Texture(this.canvas),this.texture.minFilter=THREE.NearestFilter,this.texture.magFilter=THREE.NearestFilter,this.texture.flipY=!1,this.pnode=new t(new Rectangle(0,0,e,i)),this.pnode.computeNormal(e,i)};e.prototype=new THREE.EventDispatcher,e.prototype.constructor=e,e.prototype.get=function(t){return this.pnode.get(t)},e.prototype.add=function(t,e){if(void 0===e||null===e)return null;if(null!==this.get(t))return null;var i=this.pnode.insert(t,e);if(i){var s=i.rect;this.context.drawImage(e,s.x,s.y),this.texture.needsUpdate=!0,this.dispatchEvent({type:"sprite_added"})}return i},e.prototype.remove=function(t){var e=this.pnode["delete"](t);if(e){var i=e.rect;this.context.clearRect(i.x,i.y,i.width,i.height),this.texture.needsUpdate=!0,this.dispatchEvent({type:"sprite_removed"})}return e},e.prototype.load=function(t,e){},window.DynamicSpriteSheet=e}(),function(){var t=function(){};t.prototype.init=function(){return this},t.prototype.draw=function(){},t.prototype.update=function(){},t.prototype.create=function(t){},t.prototype.add=function(t){},t.prototype.remove=function(t){},t.prototype.destroy=function(t){},window.ObjectRenderer=t}(),function(){var t=function(){}.toString().match(/[^]*\/\*([^]*)\*\/\}$/)[1],e=function(){}.toString().match(/[^]*\/\*([^]*)\*\/\}$/)[1],i=Math.pow(2,32)-1,s=-99999,n=function(){};n.prototype=Object.create(THREE.EventDispatcher.prototype);var r=function(t){this.webGlView=t,this.pointSize=32,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,this.markers={},this.hoveredMarker=null,this.minIndex=i,this.maxIndex=0,this.index=0};r.prototype.init=function(){return this.positions=new Float32Array(3e6),this.positions.fill(s),this.positionsAttribute=new THREE.BufferAttribute(this.positions,3),this.positionsAttribute.setDynamic(!0),this.colors=new Float32Array(3e6),this.colorsAttribute=new THREE.BufferAttribute(this.colors,3),this.colorsAttribute.setDynamic(!0),this.tiles=new Float32Array(4e6),this.tilesAttribute=new THREE.BufferAttribute(this.tiles,4),this.tilesAttribute.setDynamic(!0),this.geometry=new THREE.BufferGeometry,this.geometry.addAttribute("position",this.positionsAttribute),this.geometry.addAttribute("color",this.colorsAttribute),this.geometry.addAttribute("tile",this.tilesAttribute),this.spriteSheet=new DynamicSpriteSheet(256,256),this.material=new THREE.ShaderMaterial({uniforms:{tex1:{type:"t",value:this.spriteSheet.texture},pointSize:{type:"f",value:this.pointSize}},vertexColors:THREE.VertexColors,vertexShader:t,fragmentShader:e,transparent:!0,depthWrite:!1,depthTest:!1}),this.sceneObject=new THREE.Points(this.geometry,this.material),this.raycastObjects=[this.sceneObject],this.addEventListeners(),this},r.prototype.addEventListeners=function(){document.addEventListener("mousemove",this.handleDocumentMouseMove.bind(this),!1),document.addEventListener("click",this.handleDocumentMouseClick.bind(this),!1)},r.prototype.handleDocumentMouseMove=function(t){this.update(t)},r.prototype.handleDocumentMouseClick=function(t){this.update(t),this.hoveredMarker&&this.hoveredMarker.dispatchEvent({type:"click"})},r.prototype._createMarker=function(t){var e=new n;return e.index=t,this.markers[t]=e,e},r.prototype.add=function(t){for(var e=3*this.index;e<this.positions.length&&this.positions[e]!==s;)e=3*++this.index;if(e>=this.positions.length)return void console.log("[PointRenderer] Run out of points!!!");t=t||{},t.position=t.position||{x:0,y:0,z:0},t.color=t.color||{r:1,g:1,b:1},this.positions[e+0]=t.position.x,this.positions[e+1]=t.position.y,this.positions[e+2]=t.position.z,this.colors[e+0]=t.color.r,this.colors[e+1]=t.color.g,this.colors[e+2]=t.color.b;var i=this.spriteSheet.get(t.imageName);i||(i=this.spriteSheet.add(t.imageName,t.image),i||console.log("[PointRenderer] SpriteSheet already full."));var n=null!==i?i.normalRect:{x:0,y:0,width:0,height:0};this.tiles[4*this.index+0]=n.x,this.tiles[4*this.index+1]=n.y,this.tiles[4*this.index+2]=n.width,this.tiles[4*this.index+3]=n.height,this.minIndex=Math.min(this.minIndex,this.index),this.maxIndex=Math.max(this.maxIndex,this.index);var r=this.markers[this.index]||this._createMarker(this.index);return this.index++,r},r.prototype.remove=function(t){var e=3*t.index;this.positions[e+0]=s,this.positions[e+1]=s,this.positions[e+2]=s,this.minIndex=Math.min(this.minIndex,t.index),this.maxIndex=Math.max(this.maxIndex,t.index),this.index>t.index&&(this.index=t.index)},r.prototype.draw=function(){this.minIndex=this.minIndex==i?0:this.minIndex;var t=this.maxIndex!=this.minIndex;this.positionsAttribute.updateRange.offset=3*this.minIndex,this.positionsAttribute.updateRange.count=3*this.maxIndex+3-3*this.minIndex,this.positionsAttribute.needsUpdate=t,this.colorsAttribute.updateRange.offset=3*this.minIndex,this.colorsAttribute.updateRange.count=3*this.maxIndex+3-3*this.minIndex,this.colorsAttribute.needsUpdate=t,this.tilesAttribute.updateRange.offset=4*this.minIndex,this.tilesAttribute.updateRange.count=4*this.maxIndex+4-4*this.minIndex,this.tilesAttribute.needsUpdate=t,t&&(this.geometry.computeBoundingBox(),this.geometry.computeBoundingSphere()),this.minIndex=i,this.maxIndex=0},r.prototype.update=function(t){this.mouse.x=t.clientX/this.webGlView.width*2-1,this.mouse.y=2*-(t.clientY/this.webGlView.height)+1,this.raycaster.params.Points.threshold=16/Math.pow(2,this.webGlView.scale),this.raycaster.setFromCamera(this.mouse,this.webGlView.camera);var e=this.raycaster.intersectObjects(this.raycastObjects);intersection=e.length>0?e[0]:null,intersection?null===this.hoveredMarker?(this.hoveredMarker=this.markers[intersection.index],this.hoveredMarker.dispatchEvent({type:"mouseover"})):this.hoveredMarker.index!=intersection.index&&(this.hoveredMarker.dispatchEvent({type:"mouseout"}),this.hoveredMarker=this.markers[intersection.index],this.hoveredMarker.dispatchEvent({type:"mouseover"})):null!==this.hoveredMarker&&(this.hoveredMarker.dispatchEvent({type:"mouseout"}),this.hoveredMarker=null)},window.PointRenderer=r}(),function(){var t=function(){};t.prototype=new ObjectRenderer,t.prototype.constructor=ObjectRenderer,t.prototype.create=function(t){t=t||{};var e=t.features||[],i=null!==t.fillColor&&void 0!==t.fillColor?t.fillColor:255,s=null!==t.strokeColor&&void 0!==t.strokeColor?t.strokeColor:16777215;if(null===e||0===e.length)return null;for(var n=new THREE.Geometry,r=new THREE.Geometry,o=n.vertices.length,h=0,a=0;a<e.length;a++){var l=e[a];if(0!==l.length)for(var d=0;d<l.length;d++)for(var u=l[d],p=0;p<u.length;p++){for(var c=u[p],m=[],y=[],f=0,g=0;g<c.length;g++){var v=c[g],x={x:v[0],y:v[1]};m.push(x.x),m.push(x.y);var w=new THREE.Vector3(x.x,x.y,1001);n.vertices.push(w);var E=new THREE.Vector3(x.x,x.y,1);r.vertices.push(E);var b,R,T;g==c.length-1?(b=c[0],R={x:b[0],y:b[1]},T=new THREE.Vector3(R.x,R.y,1),r.vertices.push(T)):(b=c[g+1],R={x:b[0],y:b[1]},T=new THREE.Vector3(R.x,R.y,1),r.vertices.push(T))}p>0&&y.push(f),f+=c.length;for(var M=earcut(m,null,2),S=0;S<M.length;S+=3){var A=new THREE.Face3(M[S+2]+o,M[S+1]+o,M[S+0]+o);n.faces.push(A)}o=n.vertices.length,h++}}var I=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:i,opacity:.25,transparent:!0,depthWrite:!1,depthTest:!1})),k=new THREE.LineSegments(r,new THREE.LineBasicMaterial({color:s,linewidth:2,opacity:.25,transparent:!0,depthWrite:!1,depthTest:!1}));return{shape:I,outline:k}},window.PolygonRenderer=t}(),function(){var t=function(){}.toString().match(/[^]*\/\*([^]*)\*\/\}$/)[1],e=function(){}.toString().match(/[^]*\/\*([^]*)\*\/\}$/)[1],i=Math.pow(2,32)-1,s=-99999,n=12,r=6,o=8,h=16,a=function(){this.minIndex=i,this.maxIndex=0,this.index=0,this.sprites=[],this.opacity=.8};a.prototype.init=function(){return this.positions=new Float32Array(1024*n),this.positions.fill(s),this.positionsAttribute=new THREE.BufferAttribute(this.positions,3),this.positionsAttribute.setDynamic(!0),this.indices=new Uint16Array(1024*r),this.indicesAttribute=new THREE.BufferAttribute(this.indices,1),this.indicesAttribute.setDynamic(!0),this.uv=new Float32Array(1024*o),this.uvAttribute=new THREE.BufferAttribute(this.uv,2),this.uvAttribute.setDynamic(!0),this.tiles=new Float32Array(1024*h),this.tilesAttribute=new THREE.BufferAttribute(this.tiles,4),this.tilesAttribute.setDynamic(!0),this.geometry=new THREE.BufferGeometry,this.geometry.setIndex(this.indicesAttribute),this.geometry.addAttribute("position",this.positionsAttribute),this.geometry.addAttribute("uv",this.uvAttribute),this.geometry.addAttribute("tile",this.tilesAttribute),this.spriteSheet=new DynamicSpriteSheet(4096,4096),this.material=new THREE.ShaderMaterial({uniforms:{tex1:{type:"t",value:this.spriteSheet.texture},alpha:{type:"f",value:this.opacity}},vertexShader:t,fragmentShader:e}),this.sceneObject=new THREE.Mesh(this.geometry,this.material),this},a.prototype.add=function(t){for(var e=this.index*n;e<this.positions.length&&this.positions[e]!==s;)e=++this.index*n;if(e>=this.positions.length)return void console.log("[SpriteRenderer] Run out of points!!!");var i=t.image,a=t.imageName,l=this.spriteSheet.get(a);l||(l=this.spriteSheet.add(a,i),l||console.log("[SpriteRenderer] SpriteSheet already full.")),t=t||{},t.position=t.position||{x:0,y:0,z:0},t.width=t.width||256,t.height=t.height||256,t.imageName=t.icon||"red-dot",this.positions[e+0]=t.position.x,this.positions[e+1]=t.position.y,this.positions[e+2]=t.position.z,this.positions[e+3]=t.position.x+t.width,this.positions[e+4]=t.position.y,this.positions[e+5]=t.position.z,this.positions[e+6]=t.position.x,this.positions[e+7]=t.position.y+t.height,this.positions[e+8]=t.position.z,this.positions[e+9]=t.position.x+t.width,this.positions[e+10]=t.position.y+t.height,this.positions[e+11]=t.position.z;var d=this.index*r;this.indices[d+0]=4*this.index+0,this.indices[d+1]=4*this.index+2,this.indices[d+2]=4*this.index+1,this.indices[d+3]=4*this.index+1,this.indices[d+4]=4*this.index+2,this.indices[d+5]=4*this.index+3;var u=this.index*o;this.uv[u+0]=0,this.uv[u+1]=0,this.uv[u+2]=1,this.uv[u+3]=0,this.uv[u+4]=0,this.uv[u+5]=1,this.uv[u+6]=1,this.uv[u+7]=1;var p=this.index*h;return this.tiles[p+0]=this.tiles[p+4]=this.tiles[p+8]=this.tiles[p+12]=l.normalRect.x,this.tiles[p+1]=this.tiles[p+5]=this.tiles[p+9]=this.tiles[p+13]=l.normalRect.y,this.tiles[p+2]=this.tiles[p+6]=this.tiles[p+10]=this.tiles[p+14]=l.normalRect.width,this.tiles[p+3]=this.tiles[p+7]=this.tiles[p+11]=this.tiles[p+15]=l.normalRect.height,this.minIndex=Math.min(this.minIndex,this.index),this.maxIndex=Math.max(this.maxIndex,this.index),{index:this.index++,name:a}},a.prototype.remove=function(t){for(var e=t.index*n,i=0;n>i;i++)this.positions[e+i]=s;this.spriteSheet.remove(t.name),this.minIndex=Math.min(this.minIndex,t.index),this.maxIndex=Math.max(this.maxIndex,t.index),this.index>t.index&&(this.index=t.index)},a.prototype.draw=function(){this.minIndex=this.minIndex==i?0:this.minIndex;var t=this.maxIndex!=this.minIndex,e=n;this.positionsAttribute.updateRange.offset=this.minIndex*e,this.positionsAttribute.updateRange.count=this.maxIndex*e+e-this.minIndex*e,this.positionsAttribute.needsUpdate=t;var s=r;this.indicesAttribute.updateRange.offset=this.minIndex*s,this.indicesAttribute.updateRange.count=this.maxIndex*s+s-this.minIndex*s,this.indicesAttribute.needsUpdate=t;var a=o;this.uvAttribute.updateRange.offset=this.minIndex*a,this.uvAttribute.updateRange.count=this.maxIndex*a+a-this.minIndex*a,this.uvAttribute.needsUpdate=t;var l=h;this.tilesAttribute.updateRange.offset=this.minIndex*l,this.tilesAttribute.updateRange.count=this.maxIndex*l+l-this.minIndex*l,this.tilesAttribute.needsUpdate=t,t&&(this.geometry.computeBoundingBox(),this.geometry.computeBoundingSphere()),this.minIndex=i,this.maxIndex=0},window.SpriteRenderer=a}(),function(){var t=function(t){this.name=t.name;var e=t.x,i=t.y,s=t.width,n=t.height;this.rect=new Rectangle(e,i,s,n)};t.prototype.computeNormal=function(t,e){return this.normalRect=this.rect.getNormalizedRect(t,e),this};var e=function(e,i){this.texture=e,this.sprites={};for(var s=0;s<i.length;s++)this.sprites[i[s].name]=new t(i[s]).computeNormal(e.image.width,e.image.height)};e.prototype.get=function(t){return this.sprites[t]},window.SpriteSheet=e}(),function(){var t=function(){for(var t=document.createElement("div"),e=["transform","WebkitTransform","MozTransform","OTransform","msTransform"],i=0;i<e.length;i++){var s=e[i];if(void 0!==t.style[s])return s}return e[0]}(),e=function(){this.camera=new THREE.OrthographicCamera(0,255,0,255,-3e3,3e3),this.camera.position.z=1e3,this.scene=new THREE.Scene,this.sceneMask=new THREE.Scene,this.renderer=new THREE.WebGLRenderer({alpha:!0,antialiasing:!0,clearColor:0,clearAlpha:0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.autoClear=!1,this.context=this.renderer.context,this.animationFrame=null,this.objectRenderers=[],this.numMasks=0,this.update=function(){var e=this.map,i=e.getBounds(),s=new google.maps.LatLng(i.getNorthEast().lat(),i.getSouthWest().lng()),n=this.renderer.domElement,r=this.getProjection().fromLatLngToDivPixel(s);n.style[t]="translate("+Math.round(r.x)+"px,"+Math.round(r.y)+"px)";var o=e.getDiv(),h=o.clientWidth,a=o.clientHeight;(h!==this.width||a!==this.height)&&(this.width=h,this.height=a,this.renderer.setSize(h,a));var l=e.getZoom(),d=Math.pow(2,l),u=e.getProjection().fromLatLngToPoint(s);this.camera.position.x=u.x,this.camera.position.y=u.y,this.scale=l,this.camera.scale.x=this.width/256/d,this.camera.scale.y=this.height/256/d},this.draw=function(){cancelAnimationFrame(this.animationFrame),this.animationFrame=requestAnimationFrame(this.deferredRender.bind(this))},this.deferredRender=function(){this.update();var t=this.context,e=(this.renderer,this.numMasks>0);e&&(t.colorMask(!1,!1,!1,!1),t.depthMask(!1),t.enable(t.STENCIL_TEST),t.stencilOp(t.REPLACE,t.REPLACE,t.REPLACE),t.stencilFunc(t.ALWAYS,0,4294967295),t.clearStencil(1),this.renderer.render(this.sceneMask,this.camera,null,!0),t.colorMask(!0,!0,!0,!0),t.depthMask(!0),t.stencilFunc(t.EQUAL,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP));for(var i=0;i<this.objectRenderers.length;i++)this.objectRenderers[i].draw();this.renderer.render(this.scene,this.camera,null,!e),e&&t.disable(t.STENCIL_TEST),this.dispatchEvent({type:"render"})}};e.prototype=_.extend(new google.maps.OverlayView,new THREE.EventDispatcher),e.prototype.constructor=e,e.prototype.onAdd=function(){this.getPanes().overlayLayer.appendChild(this.renderer.domElement),this.addEventListeners(),this.dispatchEvent({type:"added_to_dom"})},e.prototype.onRemove=function(){this.renderer.domElement;this.canvas.parentElement.removeChild(this.canvas),this.removeEventListeners(),this.dispatchEvent({type:"removed_from_dom"})},e.prototype.init=function(){return this.pointRenderer=new PointRenderer(this).init(),this.scene.add(this.pointRenderer.sceneObject),this.spriteRenderer=(new SpriteRenderer).init(),this.scene.add(this.spriteRenderer.sceneObject),this.polygonRenderer=(new PolygonRenderer).init(),this.objectRenderers.push(this.pointRenderer),this.objectRenderers.push(this.polygonRenderer),this.objectRenderers.push(this.spriteRenderer),this},e.prototype.addEventListeners=function(){this.changeHandler=google.maps.event.addListener(this.map,"bounds_changed",this.draw.bind(this))},e.prototype.removeEventListeners=function(){google.maps.event.removeListener(this.changeHandler),this.changeHandler=null},e.prototype.addObject=function(t){this.scene.add(t)},e.prototype.removeObject=function(t){this.scene.remove(t)},e.prototype.addPoint=function(t){return this.pointRenderer.add(t)},e.prototype.removePoint=function(t){this.pointRenderer.remove(t)},e.prototype.addSprite=function(t){return this.spriteRenderer.add(t)},e.prototype.removeSprite=function(t){this.spriteRenderer.remove(t)},e.prototype.createGeometry=function(t){var e=this.polygonRenderer.create(t,this.scene);return null!==e&&this.addGeometry(e),e},e.prototype.addGeometry=function(t){this.scene.add(t.shape),this.scene.add(t.outline)},e.prototype.removeGeometry=function(t){this.scene.remove(t.shape),this.scene.remove(t.outline)},e.prototype.destroyGeometry=function(t){delete t.shape,delete t.outline},e.prototype.createMask=function(t){var e=this.polygonRenderer.create(t);return null!==e&&(this.addMask(e),this.numMasks++),e},e.prototype.addMask=function(t){this.sceneMask.add(t.shape),this.sceneMask.add(t.outline),this.numMasks++},e.prototype.removeMask=function(t){this.sceneMask.remove(t.shape),this.sceneMask.remove(t.outline),this.numMasks--},e.prototype.destroyMask=function(t){delete t.shape,delete t.outline},window.WebGLView=e}(),function(){var t={};t.get=function(t,e){var i=Q.defer(),s=e.responseType;if("blob"===s)var n=$("<img />").attr("src",t).on("load",function(){i.resolve({data:n[0]})});else $.ajax(t,e).success(function(t,e,s){i.resolve({data:t,status:e,xhr:s})}).error(function(t,e,s){i.reject({xhr:t,status:e,error:s})});return i.promise},window.http=t}(),function(){function t(t,i,s){var n=s.fromLatLngToPoint(t),r={x:n.x*Math.pow(2,i),y:n.y*Math.pow(2,i)},o={x:Math.floor(r.x/e),y:Math.floor(r.y/e)};return o}var e=256,i=function(t){this.webGlView=t,this.bounds=new Rectangle(0,0,0,0),this.zoom=0,this.minZoom=0,this.maxZoom=10,this.enabled=!1,this.views=[]};i.prototype.setMap=function(t){return t?(this.map=t,this.update(),this._addEventListeners()):(this._removeEventListeners(),this.map=t),this},i.prototype.addView=function(t){var i=this.views.indexOf(t);0>i&&this.views.push(t);var s=this.bounds;return t.setTileSize(e),t.showTiles(s.ulx,s.uly,s.lrx,s.lry,this.zoom),this},i.prototype.removeView=function(t){var e=this.views.indexOf(t);return e>=0&&this.views.splice(e,1),t.clear(),this},i.prototype._addEventListeners=function(){this.changeListener=google.maps.event.addListener(this.map,"bounds_changed",this.update.bind(this))},i.prototype._removeEventListeners=function(){google.maps.event.removeListener(this.changeListener)},i.prototype.hasChangedZoom=function(t){return this.zoom!=t},i.prototype.hasChangedBounds=function(t){var e=this.bounds;return e.ulx!=t.ulx||e.uly!=t.uly||e.lrx!=t.lrx||e.lry!=t.lry},i.prototype.update=function(){var e=this.map,i=e.getBounds(),s=i.getNorthEast(),n=i.getSouthWest(),r=new google.maps.LatLng(s.lat(),n.lng()),o=new google.maps.LatLng(n.lat(),s.lng()),h=e.getZoom(),a=e.getProjection(),l=t(r,h,a),d=t(o,h,a),u=new Rectangle(l.x,l.y,d.x-l.x,d.y-l.y);h=Math.max(this.minZoom,h),h=Math.min(this.maxZoom,h);var p=this.bounds,c=Math.min(p.ulx,u.ulx),m=Math.min(p.uly,u.uly),y=Math.max(p.lrx,u.lrx)-c,f=Math.max(p.lry,u.lry)-m,g=new Rectangle(c,m,y,f);this.hasChangedZoom(h)&&(this.updateTiles(p,p,new Rectangle(-1,-1,0,0),this.zoom),p=new Rectangle(-1,-1,0,0),g=u),this.hasChangedBounds(u)&&this.updateTiles(g,p,u,h)},i.prototype.updateTiles=function(t,e,i,s){for(var n=this.views,r=0;r<n.length;r++){for(var o=t.ulx;o<=t.lrx;o++)for(var h=t.uly;h<=t.lry;h++)i.containsPoint(o,h)?e.containsPoint(o,h)||n[r].showTile(o,h,s):e.containsPoint(o,h)&&n[r].hideTile(o,h,s);this.webGlView.draw()}this.zoom=s,this.bounds=i},window.TileController=i}(),function(){var t=function(t,e){this.url=t,this.projection=e,this.fileExtension="json",this.responseType="json"};t.prototype.parse=function(t){var e=[];if(t)if("FeatureCollection"==t.type)for(var i=t.features,s=0;s<i.length;s++)e.push(this._parseFeature(i[s]));else"Feature"==t.type&&e.push(this._parseFeature(t));return e},t.prototype._parseFeature=function(t){var e=[];if("Polygon"==t.geometry.type)e.push(this._parsePolygon(t.geometry.coordinates));else if("MultiPolygon"==t.geometry.type)for(var i=t.geometry.coordinates,s=0;s<i.length;s++)e.push(this._parsePolygon(i[s]));return e},t.prototype._parsePolygon=function(t){for(var e=[],i=0;i<t.length;i++){for(var s=[],n=0;n<t[i].length;n++){var r=new google.maps.LatLng(t[i][n][1],t[i][n][0]),o=this.projection.fromLatLngToPoint(r);s.push([o.x,o.y])}e.push(s)}return e},window.GeoJSONDataSource=t}(),function(){var t=function(t){this.url=t,this.fileExtension="png",this.responseType="blob"};t.prototype.parse=function(t){return t},window.ImageDataSource=t}(),function(){var t=function(t,e,i){this.dataSource=t,this.$http=e,this.$q=i,this.tiles={}};t.prototype.getTileUrl=function(t,e,i){return this.dataSource.url+"/"+i+"/"+t+"/"+e+"."+this.dataSource.fileExtension},t.prototype.getTile=function(t,e,i){var s=this.$q.defer(),n=this.getTileUrl(t,e,i);if(this.tiles[n])s.resolve({url:n,data:this.tiles[n]});else{var r=this;this.$http.get(n,{responseType:this.dataSource.responseType}).then(function(t){r.tiles[n]=r.dataSource.parse(t.data),s.resolve({url:n,data:r.tiles[n]})},function(t){s.reject(t)})}return s.promise},window.TileProvider=t}(),function(){var t=function(t,e){this.tileProvider=t,this.webGlView=e,this.tiles={}};t.prototype.setTileSize=function(t){this.tileSize=t},t.prototype.showTiles=function(t,e,i,s,n){for(var r=t;i>=r;r++)for(var o=e;s>=o;o++)this.showTile(r,o,n);this.webGlView.draw()},t.prototype.showTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);if(this.tiles[s]){if(!this.tiles[s].geometry){var n=Math.pow(2,i),r=this.tileSize/n,o={position:{x:t*r,y:e*r,z:i},width:r,height:r,image:this.tiles[s].data,imageName:s};this.tiles[s].geometry=this.webGlView.addSprite(o),this.webGlView.draw()}}else{var h=this;this.tileProvider.getTile(t,e,i).then(function(n){h.tiles[s]=n;var r=Math.pow(2,i),o=h.tileSize/r,a={position:{x:t*o,y:e*o,z:i},width:o,height:o,image:h.tiles[s].data,imageName:s};h.tiles[s].geometry=h.webGlView.addSprite(a),h.webGlView.draw()},function(t){})}},t.prototype.hideTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);this.tiles[s]&&this.tiles[s].geometry&&(this.webGlView.removeSprite(this.tiles[s].geometry),this.tiles[s].geometry=null)},t.prototype.clear=function(){for(var t in this.tiles)this.tiles[t].geometry&&(this.webGlView.removeSprite(this.tiles[t].geometry),this.tiles[t].geometry=null);this.webGlView.draw()},window.ImageTileView=t}(),function(){function t(){return(255&Math.floor(255*Math.random()))<<16|(255&Math.floor(255*Math.random()))<<8|255&Math.floor(255*Math.random())}var e=function(t,e,i){this.tileProvider=t,this.webGlView=e,this.tiles={},this.shownTiles={},this.useRandomColors=i};e.prototype.setTileSize=function(t){this.tileSize=t},e.prototype.setTileSize=function(t){this.tileSize=t},e.prototype.showTiles=function(t,e,i,s,n){for(var r=t;i>=r;r++)for(var o=e;s>=o;o++)this.showTile(r,o,n);this.webGlView.draw()},e.prototype.showTile=function(e,i,s){var n=this.tileProvider.getTileUrl(e,i,s);if(!this.shownTiles[n])if(this.shownTiles[n]=!0,this.tiles[n]){if(this.tiles[n].geometry)this.webGlView.addGeometry(this.tiles[n].geometry);else if(this.tiles[n].data){var r={};r.features=this.tiles[n].data,r.fillColor=this.useRandomColors?t():null,this.tiles[n].geometry=this.webGlView.createGeometry(r),this.webGlView.draw()}}else{var o=this;this.tileProvider.getTile(e,i,s).then(function(e){if(o.tiles[n]=e,o.shownTiles[n]){var i={};i.features=o.tiles[n].data,i.fillColor=o.useRandomColors?t():null,o.tiles[n].geometry=o.webGlView.createGeometry(i),o.webGlView.draw()}},function(t){console.log(t)})}},e.prototype.hideTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);this.shownTiles[s]=!1,this.tiles[s]&&this.tiles[s].geometry&&(this.webGlView.removeGeometry(this.tiles[s].geometry),delete this.tiles[s].geometry,this.tiles[s].geometry=null)},e.prototype.clear=function(){for(var t in this.tiles)this.tiles[t].geometry&&this.webGlView.removeGeometry(this.tiles[t].geometry);this.webGlView.draw()},window.VectorTileView=e}();
//# sourceMappingURL=data:application/json;base64,
